!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/cdk/observers"),require("@angular/common"),require("@angular/core"),require("ng-zorro-antd/core")):"function"==typeof define&&define.amd?define("ng-zorro-antd/badge",["exports","@angular/cdk/observers","@angular/common","@angular/core","ng-zorro-antd/core"],e):e((n["ng-zorro-antd"]=n["ng-zorro-antd"]||{},n["ng-zorro-antd"].badge={}),n.ng.cdk.observers,n.ng.common,n.ng.core,n["ng-zorro-antd"].core)}(this,function(n,e,t,r,o){"use strict";function a(n,e,t,o){var r,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;0<=l;l--)(r=n[l])&&(s=(a<3?r(s):3<a?r(e,t,s):r(e,t))||s);return 3<a&&s&&Object.defineProperty(e,t,s),s}function s(n,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)}var l=(i.prototype.checkContent=function(){o.isEmpty(this.contentElement.nativeElement)?this.renderer.addClass(this.elementRef.nativeElement,"ant-badge-not-a-wrapper"):this.renderer.removeClass(this.elementRef.nativeElement,"ant-badge-not-a-wrapper")},Object.defineProperty(i.prototype,"showSup",{get:function(){return this.nzShowDot&&this.nzDot||0<this.count||0===this.count&&this.nzShowZero},enumerable:!0,configurable:!0}),i.prototype.generateMaxNumberArray=function(){this.maxNumberArray=this.nzOverflowCount.toString().split("")},i.prototype.ngOnInit=function(){this.generateMaxNumberArray()},i.prototype.ngAfterViewInit=function(){this.checkContent()},i.prototype.ngOnChanges=function(n){var e=n.nzOverflowCount,t=n.nzCount,o=n.nzColor;!t||t.currentValue instanceof r.TemplateRef||(this.count=Math.max(0,t.currentValue),this.countArray=this.count.toString().split("").map(function(n){return+n})),e&&this.generateMaxNumberArray(),o&&(this.presetColor=-1!==this.colorArray.indexOf(this.nzColor)?this.nzColor:null)},i.decorators=[{type:r.Component,args:[{selector:"nz-badge",exportAs:"nzBadge",preserveWhitespaces:!1,encapsulation:r.ViewEncapsulation.None,changeDetection:r.ChangeDetectionStrategy.OnPush,animations:[o.zoomBadgeMotion],template:'<span (cdkObserveContent)="checkContent()" #contentElement><ng-content></ng-content></span>\r\n<span class="ant-badge-status-dot ant-badge-status-{{nzStatus || presetColor}}" [style.background]="!presetColor && nzColor" *ngIf="nzStatus || nzColor" [ngStyle]="nzStyle"></span>\r\n<span class="ant-badge-status-text" *ngIf="nzStatus || nzColor">{{ nzText }}</span>\r\n<ng-container *nzStringTemplateOutlet="nzCount">\r\n  <sup class="ant-scroll-number"\r\n    *ngIf="showSup"\r\n    @zoomBadgeMotion\r\n    [ngStyle]="nzStyle"\r\n    [class.ant-badge-count]="!nzDot"\r\n    [class.ant-badge-dot]="nzDot"\r\n    [class.ant-badge-multiple-words]="countArray.length>=2">\r\n    <ng-container *ngFor="let n of maxNumberArray;let i = index;">\r\n      <span class="ant-scroll-number-only"\r\n        *ngIf="count <= nzOverflowCount"\r\n        [style.transform]="\'translateY(\' + (-countArray[i] * 100) + \'%)\'">\r\n          <ng-container *ngIf="(!nzDot)&&(countArray[i]!=null)">\r\n            <p *ngFor="let p of countSingleArray" [class.current]="p === countArray[i]">{{ p }}</p>\r\n          </ng-container>\r\n      </span>\r\n    </ng-container>\r\n    <ng-container *ngIf="count > nzOverflowCount">{{ nzOverflowCount }}+</ng-container>\r\n  </sup>\r\n</ng-container>',host:{"[class.ant-badge-status]":"nzStatus"}}]}],i.ctorParameters=function(){return[{type:r.Renderer2},{type:r.ElementRef}]},i.propDecorators={contentElement:[{type:r.ViewChild,args:["contentElement"]}],nzShowZero:[{type:r.Input}],nzShowDot:[{type:r.Input}],nzDot:[{type:r.Input}],nzOverflowCount:[{type:r.Input}],nzText:[{type:r.Input}],nzColor:[{type:r.Input}],nzStyle:[{type:r.Input}],nzStatus:[{type:r.Input}],nzCount:[{type:r.Input}]},a([o.InputBoolean(),s("design:type",Object)],i.prototype,"nzShowZero",void 0),a([o.InputBoolean(),s("design:type",Object)],i.prototype,"nzShowDot",void 0),a([o.InputBoolean(),s("design:type",Object)],i.prototype,"nzDot",void 0),i);function i(n,e){this.renderer=n,this.elementRef=e,this.maxNumberArray=[],this.countArray=[],this.countSingleArray=[0,1,2,3,4,5,6,7,8,9],this.colorArray=["pink","red","yellow","orange","cyan","green","blue","purple","geekblue","magenta","volcano","gold","lime"],this.presetColor=null,this.nzShowZero=!1,this.nzShowDot=!0,this.nzDot=!1,this.nzOverflowCount=99,n.addClass(e.nativeElement,"ant-badge")}var u=(c.decorators=[{type:r.NgModule,args:[{declarations:[l],exports:[l],imports:[t.CommonModule,e.ObserversModule,o.NzAddOnModule]}]}],c);function c(){}n.NzBadgeComponent=l,n.NzBadgeModule=u,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=ng-zorro-antd-badge.umd.min.js.map