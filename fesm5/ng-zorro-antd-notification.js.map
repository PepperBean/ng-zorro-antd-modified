{"version":3,"file":"ng-zorro-antd-notification.js.map","sources":["ng://ng-zorro-antd/notification/nz-notification-config.ts","ng://ng-zorro-antd/notification/nz-notification-container.component.ts","ng://ng-zorro-antd/notification/nz-notification.component.ts","ng://ng-zorro-antd/notification/nz-notification.service.ts","ng://ng-zorro-antd/notification/nz-notification.module.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nimport { NzMessageConfig } from 'ng-zorro-antd/message';\r\n\r\nexport interface NzNotificationConfig extends NzMessageConfig {\r\n  nzTop?: string | number;\r\n  nzBottom?: string | number;\r\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | string;\r\n}\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG = new InjectionToken<NzNotificationConfig>(\r\n  'NZ_NOTIFICATION_DEFAULT_CONFIG'\r\n);\r\n\r\nexport const NZ_NOTIFICATION_CONFIG = new InjectionToken<NzNotificationConfig>('NZ_NOTIFICATION_CONFIG');\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER = {\r\n  provide: NZ_NOTIFICATION_DEFAULT_CONFIG,\r\n  useValue: {\r\n    nzTop: '24px',\r\n    nzBottom: '24px',\r\n    nzPlacement: 'topRight',\r\n    nzDuration: 4500,\r\n    nzMaxStack: 7,\r\n    nzPauseOnHover: true,\r\n    nzAnimate: true\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  Optional,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { toCssPixel } from 'ng-zorro-antd/core';\r\nimport { NzMessageContainerComponent } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationConfig, NZ_NOTIFICATION_CONFIG, NZ_NOTIFICATION_DEFAULT_CONFIG } from './nz-notification-config';\r\nimport { NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification-container',\r\n  exportAs: 'nzNotificationContainer',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-notification-container.component.html'\r\n})\r\nexport class NzNotificationContainerComponent extends NzMessageContainerComponent {\r\n  config: Required<NzNotificationConfig>;\r\n  bottom: string | null;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  messages: Array<Required<NzNotificationDataFilled>> = [];\r\n\r\n  constructor(\r\n    cdr: ChangeDetectorRef,\r\n    @Optional() @Inject(NZ_NOTIFICATION_DEFAULT_CONFIG) defaultConfig: NzNotificationConfig,\r\n    @Optional() @Inject(NZ_NOTIFICATION_CONFIG) config: NzNotificationConfig\r\n  ) {\r\n    super(cdr, defaultConfig, config);\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  setConfig(config: NzNotificationConfig): void {\r\n    const newConfig = (this.config = { ...this.config, ...config });\r\n    const placement = this.config.nzPlacement;\r\n\r\n    this.top = placement === 'topLeft' || placement === 'topRight' ? toCssPixel(newConfig.nzTop) : null;\r\n    this.bottom = placement === 'bottomLeft' || placement === 'bottomRight' ? toCssPixel(newConfig.nzBottom) : null;\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Create a new notification.\r\n   * If there's a notification whose `nzKey` is same with `nzKey` in `NzNotificationDataFilled`,\r\n   * replace its content instead of create a new one.\r\n   * @override\r\n   * @param notification\r\n   */\r\n  createMessage(notification: NzNotificationDataFilled): void {\r\n    notification.options = this._mergeMessageOptions(notification.options);\r\n    notification.onClose = new Subject<boolean>();\r\n    const key = notification.options.nzKey;\r\n    const notificationWithSameKey = this.messages.find(\r\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\r\n    );\r\n\r\n    if (key && notificationWithSameKey) {\r\n      this.replaceNotification(notificationWithSameKey, notification);\r\n    } else {\r\n      if (this.messages.length >= this.config.nzMaxStack) {\r\n        this.messages.splice(0, 1);\r\n      }\r\n      this.messages.push(notification as Required<NzNotificationDataFilled>);\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private replaceNotification(old: NzNotificationDataFilled, _new: NzNotificationDataFilled): void {\r\n    old.title = _new.title;\r\n    old.content = _new.content;\r\n    old.template = _new.template;\r\n    old.type = _new.type;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { notificationMotion } from 'ng-zorro-antd/core';\r\nimport { NzMessageComponent } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationDataFilled } from './nz-notification.definitions';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification',\r\n  exportAs: 'nzNotification',\r\n  preserveWhitespaces: false,\r\n  animations: [notificationMotion],\r\n  templateUrl: './nz-notification.component.html'\r\n})\r\nexport class NzNotificationComponent extends NzMessageComponent {\r\n  @Input() nzMessage: NzNotificationDataFilled;\r\n\r\n  constructor(private container: NzNotificationContainerComponent, protected cdr: ChangeDetectorRef) {\r\n    super(container, cdr);\r\n  }\r\n\r\n  close(): void {\r\n    this._destroy(true);\r\n  }\r\n\r\n  get state(): string | undefined {\r\n    if (this.nzMessage.state === 'enter') {\r\n      if (this.container.config.nzPlacement === 'topLeft' || this.container.config.nzPlacement === 'bottomLeft') {\r\n        return 'enterLeft';\r\n      } else {\r\n        return 'enterRight';\r\n      }\r\n    } else {\r\n      return this.nzMessage.state;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\r\n\r\nimport { NzMessageBaseService } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationConfig } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationData, NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NzNotificationService extends NzMessageBaseService<\r\n  NzNotificationContainerComponent,\r\n  NzNotificationData,\r\n  NzNotificationConfig\r\n> {\r\n  constructor(overlay: Overlay, injector: Injector, cfr: ComponentFactoryResolver, appRef: ApplicationRef) {\r\n    super(overlay, NzNotificationContainerComponent, injector, cfr, appRef, 'notification-');\r\n  }\r\n\r\n  // Shortcut methods\r\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'success', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'error', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'info', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'warning', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'blank', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  create(\r\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\r\n    title: string,\r\n    content: string,\r\n    options?: NzNotificationDataOptions\r\n  ): NzNotificationDataFilled {\r\n    return this.createMessage({ type, title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  // For content with template\r\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ template }, options) as NzNotificationDataFilled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationComponent } from './nz-notification.component';\r\nimport { NzNotificationService } from './nz-notification.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OverlayModule, NzIconModule],\r\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\r\n  providers: [NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER, NzNotificationService],\r\n  entryComponents: [NzNotificationContainerComponent]\r\n})\r\nexport class NzNotificationModule {}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
