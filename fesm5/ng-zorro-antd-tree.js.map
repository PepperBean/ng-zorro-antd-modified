{"version":3,"file":"ng-zorro-antd-tree.js.map","sources":["ng://ng-zorro-antd/tree/nz-tree-node.component.ts","ng://ng-zorro-antd/tree/nz-tree.service.ts","ng://ng-zorro-antd/tree/nz-tree.component.ts","ng://ng-zorro-antd/tree/nz-tree.module.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  collapseMotion,\r\n  InputBoolean,\r\n  NzFormatBeforeDropEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBaseService,\r\n  NzTreeNode\r\n} from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'nz-tree-node',\r\n  exportAs: 'nzTreeNode',\r\n  templateUrl: './nz-tree-node.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [collapseMotion]\r\n})\r\nexport class NzTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('dragElement') dragElement: ElementRef;\r\n\r\n  /**\r\n   * for global property\r\n   */\r\n  @Input() nzTreeNode: NzTreeNode;\r\n  @Input() @InputBoolean() nzShowLine: boolean;\r\n  @Input() @InputBoolean() nzShowExpand: boolean;\r\n  @Input() @InputBoolean() nzCheckable: boolean;\r\n  @Input() @InputBoolean() nzAsyncData: boolean;\r\n  @Input() @InputBoolean() nzHideUnMatched = false;\r\n  @Input() @InputBoolean() nzNoAnimation = false;\r\n  @Input() @InputBoolean() nzSelectMode = false;\r\n  @Input() @InputBoolean() nzShowIcon = false;\r\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n\r\n  @Input()\r\n  set nzDraggable(value: boolean) {\r\n    this._nzDraggable = value;\r\n    this.handDragEvent();\r\n  }\r\n\r\n  get nzDraggable(): boolean {\r\n    return this._nzDraggable;\r\n  }\r\n\r\n  /**\r\n   * @deprecated use\r\n   * nzExpandAll instead\r\n   */\r\n  @Input()\r\n  set nzDefaultExpandAll(value: boolean) {\r\n    this._nzExpandAll = value;\r\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\r\n      this.nzTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get nzDefaultExpandAll(): boolean {\r\n    return this._nzExpandAll;\r\n  }\r\n\r\n  // default set\r\n  @Input()\r\n  set nzExpandAll(value: boolean) {\r\n    this._nzExpandAll = value;\r\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\r\n      this.nzTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get nzExpandAll(): boolean {\r\n    return this._nzExpandAll;\r\n  }\r\n\r\n  @Input()\r\n  set nzSearchValue(value: string) {\r\n    this.highlightKeys = [];\r\n    if (value && this.nzTreeNode.title!.includes(value)) {\r\n      // match the search value\r\n      const index = this.nzTreeNode.title.indexOf(value);\r\n      this.highlightKeys = [\r\n        this.nzTreeNode.title.slice(0, index),\r\n        this.nzTreeNode.title.slice(index + value.length, this.nzTreeNode.title.length)\r\n      ];\r\n    }\r\n    this._searchValue = value;\r\n  }\r\n\r\n  get nzSearchValue(): string {\r\n    return this._searchValue;\r\n  }\r\n\r\n  // default var\r\n  prefixCls = 'ant-tree';\r\n  highlightKeys: string[] = [];\r\n  nzNodeClass = {};\r\n  nzNodeSwitcherClass = {};\r\n  nzNodeContentClass = {};\r\n  nzNodeCheckboxClass = {};\r\n  nzNodeContentIconClass = {};\r\n  nzNodeContentLoadingClass = {};\r\n\r\n  /**\r\n   * drag var\r\n   */\r\n  destroy$ = new Subject();\r\n  dragPos = 2;\r\n  dragPosClass: { [key: string]: string } = {\r\n    '0': 'drag-over',\r\n    '1': 'drag-over-gap-bottom',\r\n    '-1': 'drag-over-gap-top'\r\n  };\r\n\r\n  /**\r\n   * default set\r\n   */\r\n  _searchValue = '';\r\n  _nzDraggable = false;\r\n  _nzExpandAll = false;\r\n\r\n  get nzIcon(): string {\r\n    return this.nzTreeNode.icon;\r\n  }\r\n\r\n  get canDraggable(): boolean | null {\r\n    return this.nzDraggable && !this.nzTreeNode.isDisabled ? true : null;\r\n  }\r\n\r\n  get isShowLineIcon(): boolean {\r\n    return !this.nzTreeNode.isLeaf && this.nzShowLine;\r\n  }\r\n\r\n  get isShowSwitchIcon(): boolean {\r\n    return !this.nzTreeNode.isLeaf && !this.nzShowLine;\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\r\n  }\r\n\r\n  get displayStyle(): string {\r\n    // to hide unmatched nodes\r\n    return this.nzSearchValue && this.nzHideUnMatched && !this.nzTreeNode.isMatched && !this.nzTreeNode.isExpanded\r\n      ? 'none'\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * reset node class\r\n   */\r\n  setClassMap(): void {\r\n    this.prefixCls = this.nzSelectMode ? 'ant-select-tree' : 'ant-tree';\r\n    this.nzNodeClass = {\r\n      [`${this.prefixCls}-treenode-disabled`]: this.nzTreeNode.isDisabled,\r\n      [`${this.prefixCls}-treenode-switcher-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-treenode-switcher-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-treenode-checkbox-checked`]: this.nzTreeNode.isChecked,\r\n      [`${this.prefixCls}-treenode-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-treenode-selected`]: this.nzTreeNode.isSelected,\r\n      [`${this.prefixCls}-treenode-loading`]: this.nzTreeNode.isLoading\r\n    };\r\n    this.nzNodeSwitcherClass = {\r\n      [`${this.prefixCls}-switcher`]: true,\r\n      [`${this.prefixCls}-switcher-noop`]: this.nzTreeNode.isLeaf,\r\n      [`${this.prefixCls}-switcher_open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-switcher_close`]: this.isSwitcherClose\r\n    };\r\n\r\n    this.nzNodeCheckboxClass = {\r\n      [`${this.prefixCls}-checkbox`]: true,\r\n      [`${this.prefixCls}-checkbox-checked`]: this.nzTreeNode.isChecked,\r\n      [`${this.prefixCls}-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-checkbox-disabled`]: this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox\r\n    };\r\n\r\n    this.nzNodeContentClass = {\r\n      [`${this.prefixCls}-node-content-wrapper`]: true,\r\n      [`${this.prefixCls}-node-content-wrapper-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-node-content-wrapper-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-node-selected`]: this.nzTreeNode.isSelected\r\n    };\r\n    this.nzNodeContentIconClass = {\r\n      [`${this.prefixCls}-iconEle`]: true,\r\n      [`${this.prefixCls}-icon__customize`]: true\r\n    };\r\n    this.nzNodeContentLoadingClass = {\r\n      [`${this.prefixCls}-iconEle`]: true\r\n    };\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.nzSelectMode) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * click node to select, 200ms to dbl click\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  nzClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.nzTreeNode.isSelectable && !this.nzTreeNode.isDisabled) {\r\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  nzDblClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * @param event\r\n   */\r\n  @HostListener('contextmenu', ['$event'])\r\n  nzContextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * collapse node\r\n   * @param event\r\n   */\r\n  _clickExpand(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (!this.nzTreeNode.isLoading && !this.nzTreeNode.isLeaf) {\r\n      // set async state\r\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.nzTreeNode.isExpanded) {\r\n        this.nzTreeNode.isLoading = true;\r\n      }\r\n      this.nzTreeNode.isExpanded = !this.nzTreeNode.isExpanded;\r\n      const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check node\r\n   * @param event\r\n   */\r\n  _clickCheckBox(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // return if node is disabled\r\n    if (this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox) {\r\n      return;\r\n    }\r\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\r\n    this.nzTreeNode.isHalfChecked = false;\r\n    if (!this.nzTreeService.isCheckStrictly) {\r\n      this.nzTreeService.conduct(this.nzTreeNode);\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * drag event\r\n   * @param e\r\n   */\r\n  clearDragClass(): void {\r\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\r\n    dragClass.forEach(e => {\r\n      this.renderer.removeClass(this.dragElement.nativeElement, e);\r\n    });\r\n  }\r\n\r\n  handleDragStart(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    try {\r\n      // ie throw error\r\n      // firefox-need-it\r\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\r\n    } catch (error) {\r\n      // empty\r\n    }\r\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\r\n    this.nzTreeNode.isExpanded = false;\r\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragEnter(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // reset position\r\n    this.dragPos = 2;\r\n    this.ngZone.run(() => {\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (node && node.key !== this.nzTreeNode.key && !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf) {\r\n        this.nzTreeNode.isExpanded = true;\r\n      }\r\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    });\r\n  }\r\n\r\n  handleDragOver(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\r\n    if (this.dragPos !== dropPosition) {\r\n      this.clearDragClass();\r\n      this.dragPos = dropPosition;\r\n      // leaf node will pass\r\n      if (!(this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\r\n        this.renderer.addClass(this.dragElement.nativeElement, this.dragPosClass[this.dragPos]);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragLeave(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n    });\r\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragDrop(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\r\n        return;\r\n      }\r\n      // pass if node is leafNo\r\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\r\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\r\n      if (this.nzBeforeDrop) {\r\n        this.nzBeforeDrop({\r\n          dragNode: this.nzTreeService.getSelectedNode()!,\r\n          node: this.nzTreeNode,\r\n          pos: this.dragPos\r\n        }).subscribe((canDrop: boolean) => {\r\n          if (canDrop) {\r\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\r\n          }\r\n          this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n          this.nzTreeService!.triggerEventChange$!.next(dragEndEvent);\r\n        });\r\n      } else if (this.nzTreeNode) {\r\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\r\n        this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDragEnd(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      // if user do not custom beforeDrop\r\n      if (!this.nzBeforeDrop) {\r\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\r\n        this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * çå¬ææ½äºä»¶\r\n   */\r\n  handDragEvent(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (this.nzDraggable) {\r\n        this.destroy$ = new Subject();\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragstart')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragenter')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragover')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragleave')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'drop')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragend')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\r\n      } else {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    public nzTreeService: NzTreeBaseService,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // init expanded / selected / checked list\r\n    if (this.nzTreeNode.isSelected) {\r\n      this.nzTreeService.setNodeActive(this.nzTreeNode);\r\n    }\r\n    if (this.nzTreeNode.isExpanded) {\r\n      this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\r\n    }\r\n    if (this.nzTreeNode.isChecked) {\r\n      this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\r\n    }\r\n    // TODO\r\n    this.nzTreeNode.component = this;\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(\r\n        filter(data => data.node!.key === this.nzTreeNode.key),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.markForCheck();\r\n      });\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { NzTreeBaseService } from 'ng-zorro-antd/core';\r\n\r\n@Injectable()\r\nexport class NzTreeService extends NzTreeBaseService {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  forwardRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChange,\r\n  SkipSelf,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  isNotNil,\r\n  toBoolean,\r\n  InputBoolean,\r\n  NzFormatBeforeDropEvent,\r\n  NzFormatEmitEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBase,\r\n  NzTreeBaseService,\r\n  NzTreeHigherOrderServiceToken,\r\n  NzTreeNode\r\n} from 'ng-zorro-antd/core';\r\n\r\nimport { NzTreeService } from './nz-tree.service';\r\n\r\nexport function NzTreeServiceFactory(\r\n  higherOrderService: NzTreeBaseService,\r\n  treeService: NzTreeService\r\n): NzTreeBaseService {\r\n  return higherOrderService ? higherOrderService : treeService;\r\n}\r\n\r\n@Component({\r\n  selector: 'nz-tree',\r\n  exportAs: 'nzTree',\r\n  templateUrl: './nz-tree.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    NzTreeService,\r\n    {\r\n      provide: NzTreeBaseService,\r\n      useFactory: NzTreeServiceFactory,\r\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NzTreeComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n  @Input() @InputBoolean() nzShowIcon = false;\r\n  @Input() @InputBoolean() nzShowExpand = true;\r\n  @Input() @InputBoolean() nzShowLine = false;\r\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() @InputBoolean() nzCheckable = false;\r\n  @Input() @InputBoolean() nzAsyncData = false;\r\n  @Input() @InputBoolean() nzDraggable = false;\r\n  @Input() @InputBoolean() nzExpandAll = false;\r\n  @Input() @InputBoolean() nzHideUnMatched = false;\r\n  @Input() @InputBoolean() nzSelectMode = false;\r\n  @Input() @InputBoolean() nzCheckStrictly = false;\r\n  @Input() @InputBoolean() nzBlockNode = false;\r\n\r\n  @Input() @ContentChild('nzTreeTemplate') nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n\r\n  /**\r\n   * @deprecated use\r\n   * nzExpandAll instead\r\n   */\r\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\r\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n\r\n  @Input()\r\n  @InputBoolean()\r\n  set nzMultiple(value: boolean) {\r\n    this._nzMultiple = toBoolean(value);\r\n    this.nzTreeService.isMultiple = toBoolean(value);\r\n  }\r\n\r\n  get nzMultiple(): boolean {\r\n    return this._nzMultiple;\r\n  }\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  set nzData(value: any[]) {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  /**\r\n   * @deprecated use\r\n   * nzExpandedKeys instead\r\n   */\r\n  @Input()\r\n  set nzDefaultExpandedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated use\r\n   * nzSelectedKeys instead\r\n   */\r\n  @Input()\r\n  set nzDefaultSelectedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated use\r\n   * nzCheckedKeys instead\r\n   */\r\n  @Input()\r\n  set nzDefaultCheckedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzExpandedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzSelectedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzCheckedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzSearchValue(value: string) {\r\n    this._searchValue = value;\r\n    this.nzTreeService.searchExpand(value);\r\n    if (isNotNil(value)) {\r\n      this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\r\n      this.nzOnSearchNode.emit(this.nzTreeService.formatEvent('search', null, null));\r\n    }\r\n  }\r\n\r\n  get nzSearchValue(): string {\r\n    return this._searchValue;\r\n  }\r\n\r\n  /**\r\n   * To render nodes if root is changed\r\n   */\r\n  get nzNodes(): NzTreeNode[] {\r\n    return this.nzTreeService.rootNodes;\r\n  }\r\n\r\n  // model bind\r\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n\r\n  @Output() readonly nzSearchValueChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  /**\r\n   * @deprecated use\r\n   * nzSearchValueChange instead\r\n   */\r\n  @Output() readonly nzOnSearchNode: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n\r\n  @Output() readonly nzClick: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzDblClick: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzContextMenu: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzCheckBoxChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzExpandChange: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n\r\n  @Output() readonly nzOnDragStart: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzOnDragEnter: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzOnDragOver: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzOnDragLeave: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzOnDrop: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n  @Output() readonly nzOnDragEnd: EventEmitter<NzFormatEmitEvent> = new EventEmitter();\r\n\r\n  _searchValue: string;\r\n  _nzMultiple: boolean = false;\r\n  nzDefaultSubject = new ReplaySubject<{ type: string; keys: string[] }>(6);\r\n  destroy$ = new Subject();\r\n  prefixCls = 'ant-tree';\r\n  classMap = {};\r\n\r\n  onChange: (value: NzTreeNode[]) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n\r\n  setClassMap(): void {\r\n    this.classMap = {\r\n      [this.prefixCls]: true,\r\n      [this.prefixCls + '-show-line']: this.nzShowLine,\r\n      [`${this.prefixCls}-icon-hide`]: !this.nzShowIcon,\r\n      [`${this.prefixCls}-block-node`]: this.nzBlockNode,\r\n      ['draggable-tree']: this.nzDraggable,\r\n      ['ant-select-tree']: this.nzSelectMode\r\n    };\r\n  }\r\n\r\n  writeValue(value: NzTreeNode[]): void {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  initNzData(value: any[]): void {\r\n    if (Array.isArray(value)) {\r\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\r\n      this.nzTreeService.isMultiple = this.nzMultiple;\r\n      this.nzTreeService.initTree(this.coerceTreeNodes(value));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    nzTreeService: NzTreeBaseService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(nzTreeService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    this.nzDefaultSubject.pipe(takeUntil(this.destroy$)).subscribe((data: { type: string; keys: string[] }) => {\r\n      if (!data || !data.keys) {\r\n        return;\r\n      }\r\n      switch (data.type) {\r\n        case 'nzExpandedKeys':\r\n          this.nzTreeService.calcExpandedKeys(data.keys, this.nzNodes);\r\n          this.nzExpandedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzSelectedKeys':\r\n          this.nzTreeService.calcSelectedKeys(data.keys, this.nzNodes, this.nzMultiple);\r\n          this.nzSelectedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzCheckedKeys':\r\n          this.nzTreeService.calcCheckedKeys(data.keys, this.nzNodes, this.nzCheckStrictly);\r\n          this.nzCheckedKeysChange.emit(data.keys);\r\n          break;\r\n      }\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(data => {\r\n        switch (data.eventName) {\r\n          case 'expand':\r\n            this.nzExpandChange.emit(data);\r\n            break;\r\n          case 'click':\r\n            this.nzClick.emit(data);\r\n            break;\r\n          case 'check':\r\n            this.nzCheckBoxChange.emit(data);\r\n            break;\r\n          case 'dblclick':\r\n            this.nzDblClick.emit(data);\r\n            break;\r\n          case 'contextmenu':\r\n            this.nzContextMenu.emit(data);\r\n            break;\r\n          // drag drop\r\n          case 'dragstart':\r\n            this.nzOnDragStart.emit(data);\r\n            break;\r\n          case 'dragenter':\r\n            this.nzOnDragEnter.emit(data);\r\n            break;\r\n          case 'dragover':\r\n            this.nzOnDragOver.emit(data);\r\n            break;\r\n          case 'dragleave':\r\n            this.nzOnDragLeave.emit(data);\r\n            break;\r\n          case 'drop':\r\n            this.nzOnDrop.emit(data);\r\n            break;\r\n          case 'dragend':\r\n            this.nzOnDragEnd.emit(data);\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    if (changes.nzCheckStrictly) {\r\n      this.nzTreeService.isCheckStrictly = toBoolean(changes.nzCheckStrictly.currentValue);\r\n    }\r\n    if (changes.nzMultiple) {\r\n      this.nzTreeService.isMultiple = toBoolean(changes.nzMultiple.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzTreeNodeComponent } from './nz-tree-node.component';\r\nimport { NzTreeComponent } from './nz-tree.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NzAddOnModule, NzIconModule, NzNoAnimationModule],\r\n  declarations: [NzTreeComponent, NzTreeNodeComponent],\r\n  exports: [NzTreeComponent, NzTreeNodeComponent]\r\n})\r\nexport class NzTreeModule {}\r\n"],"names":["tslib_1.__decorate","tslib_1.__extends"],"mappings":"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"}
