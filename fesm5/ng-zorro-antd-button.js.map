{"version":3,"file":"ng-zorro-antd-button.js.map","sources":["ng://ng-zorro-antd/button/nz-button.component.ts","ng://ng-zorro-antd/button/nz-button-group.component.ts","ng://ng-zorro-antd/button/nz-button.module.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  findFirstNotEmptyNode,\r\n  findLastNotEmptyNode,\r\n  isEmpty,\r\n  InputBoolean,\r\n  NzSizeLDSType,\r\n  NzSizeMap,\r\n  NzUpdateHostClassService,\r\n  NzWaveConfig,\r\n  NzWaveDirective,\r\n  NZ_WAVE_GLOBAL_CONFIG\r\n} from 'ng-zorro-antd/core';\r\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\r\n\r\nexport type NzButtonType = 'primary' | 'dashed' | 'danger' | 'default' | 'link';\r\nexport type NzButtonShape = 'circle' | 'round' | null;\r\n\r\n@Component({\r\n  selector: '[nz-button]',\r\n  exportAs: 'nzButton',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-button.component.html'\r\n})\r\nexport class NzButtonComponent implements AfterContentInit, OnInit, OnDestroy, OnChanges {\r\n  readonly el: HTMLElement = this.elementRef.nativeElement;\r\n  private iconElement: HTMLElement;\r\n  private iconOnly = false;\r\n  @ViewChild('contentElement') contentElement: ElementRef;\r\n  @ContentChildren(NzIconDirective, { read: ElementRef }) listOfIconElement: QueryList<ElementRef>;\r\n  @HostBinding('attr.nz-wave') nzWave = new NzWaveDirective(\r\n    this.ngZone,\r\n    this.elementRef,\r\n    this.waveConfig,\r\n    this.animationType\r\n  );\r\n  @Input() @InputBoolean() nzBlock = false;\r\n  @Input() @InputBoolean() nzGhost = false;\r\n  @Input() @InputBoolean() nzSearch = false;\r\n  @Input() @InputBoolean() nzLoading = false;\r\n  @Input() nzType: NzButtonType = 'default';\r\n  @Input() nzShape: NzButtonShape = null;\r\n  @Input() nzSize: NzSizeLDSType = 'default';\r\n\r\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289 */\r\n  setClassMap(): void {\r\n    const prefixCls = 'ant-btn';\r\n    const sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\r\n    this.nzUpdateHostClassService.updateHostClass(this.el, {\r\n      [`${prefixCls}-${this.nzType}`]: this.nzType,\r\n      [`${prefixCls}-${this.nzShape}`]: this.nzShape,\r\n      [`${prefixCls}-${sizeMap[this.nzSize]}`]: sizeMap[this.nzSize],\r\n      [`${prefixCls}-loading`]: this.nzLoading,\r\n      [`${prefixCls}-icon-only`]: this.iconOnly,\r\n      [`${prefixCls}-background-ghost`]: this.nzGhost,\r\n      [`${prefixCls}-block`]: this.nzBlock,\r\n      [`ant-input-search-button`]: this.nzSearch\r\n    });\r\n  }\r\n\r\n  updateIconDisplay(value: boolean): void {\r\n    if (this.iconElement) {\r\n      this.renderer.setStyle(this.iconElement, 'display', value ? 'none' : 'inline-block');\r\n    }\r\n  }\r\n\r\n  checkContent(): void {\r\n    const hasIcon = this.listOfIconElement && this.listOfIconElement.length;\r\n    if (hasIcon) {\r\n      this.moveIcon();\r\n    }\r\n    this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n    /** https://github.com/angular/angular/issues/12530 **/\r\n    if (isEmpty(this.contentElement.nativeElement)) {\r\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\r\n      this.iconOnly = !!hasIcon;\r\n    } else {\r\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n      this.iconOnly = false;\r\n    }\r\n    this.setClassMap();\r\n    this.updateIconDisplay(this.nzLoading);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  moveIcon(): void {\r\n    if (this.listOfIconElement && this.listOfIconElement.length) {\r\n      const firstChildElement = findFirstNotEmptyNode(this.contentElement.nativeElement);\r\n      const lastChildElement = findLastNotEmptyNode(this.contentElement.nativeElement);\r\n      if (firstChildElement && firstChildElement === this.listOfIconElement.first.nativeElement) {\r\n        this.renderer.insertBefore(this.el, firstChildElement, this.contentElement.nativeElement);\r\n        this.iconElement = firstChildElement as HTMLElement;\r\n      } else if (lastChildElement && lastChildElement === this.listOfIconElement.last.nativeElement) {\r\n        this.renderer.appendChild(this.el, lastChildElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService,\r\n    private ngZone: NgZone,\r\n    @Optional() @Inject(NZ_WAVE_GLOBAL_CONFIG) private waveConfig: NzWaveConfig,\r\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string\r\n  ) {\r\n    this.renderer.addClass(elementRef.nativeElement, 'ant-btn');\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.checkContent();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    this.nzWave.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.nzWave.ngOnDestroy();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.nzBlock ||\r\n      changes.nzGhost ||\r\n      changes.nzSearch ||\r\n      changes.nzType ||\r\n      changes.nzShape ||\r\n      changes.nzSize ||\r\n      changes.nzLoading\r\n    ) {\r\n      this.setClassMap();\r\n    }\r\n    if (changes.nzLoading) {\r\n      this.updateIconDisplay(this.nzLoading);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { NzSizeLDSType, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'nz-button-group',\r\n  exportAs: 'nzButtonGroup',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  providers: [NzUpdateHostClassService],\r\n  templateUrl: './nz-button-group.component.html'\r\n})\r\nexport class NzButtonGroupComponent implements OnInit {\r\n  @Input()\r\n  get nzSize(): NzSizeLDSType {\r\n    return this._size;\r\n  }\r\n\r\n  set nzSize(value: NzSizeLDSType) {\r\n    this._size = value;\r\n    this.setClassMap();\r\n  }\r\n\r\n  constructor(private nzUpdateHostClassService: NzUpdateHostClassService, private elementRef: ElementRef) {}\r\n\r\n  private _size: NzSizeLDSType;\r\n  private prefixCls = 'ant-btn-group';\r\n\r\n  setClassMap(): void {\r\n    const classMap = {\r\n      [this.prefixCls]: true,\r\n      [`${this.prefixCls}-lg`]: this.nzSize === 'large',\r\n      [`${this.prefixCls}-sm`]: this.nzSize === 'small'\r\n    };\r\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, classMap);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzWaveModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzButtonGroupComponent } from './nz-button-group.component';\r\nimport { NzButtonComponent } from './nz-button.component';\r\n\r\n@NgModule({\r\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\r\n  exports: [NzButtonComponent, NzButtonGroupComponent],\r\n  imports: [CommonModule, ObserversModule, NzWaveModule, NzIconModule]\r\n})\r\nexport class NzButtonModule {}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
