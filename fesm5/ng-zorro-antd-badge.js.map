{"version":3,"file":"ng-zorro-antd-badge.js.map","sources":["ng://ng-zorro-antd/badge/nz-badge.component.ts","ng://ng-zorro-antd/badge/nz-badge.module.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { isEmpty, zoomBadgeMotion, InputBoolean } from 'ng-zorro-antd/core';\r\n\r\nexport type NzBadgeStatusType = 'success' | 'processing' | 'default' | 'error' | 'warning';\r\n\r\n@Component({\r\n  selector: 'nz-badge',\r\n  exportAs: 'nzBadge',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [zoomBadgeMotion],\r\n  templateUrl: './nz-badge.component.html',\r\n  host: {\r\n    '[class.ant-badge-status]': 'nzStatus'\r\n  }\r\n})\r\nexport class NzBadgeComponent implements OnInit, AfterViewInit, OnChanges {\r\n  maxNumberArray: string[] = [];\r\n  countArray: number[] = [];\r\n  countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  colorArray = [\r\n    'pink',\r\n    'red',\r\n    'yellow',\r\n    'orange',\r\n    'cyan',\r\n    'green',\r\n    'blue',\r\n    'purple',\r\n    'geekblue',\r\n    'magenta',\r\n    'volcano',\r\n    'gold',\r\n    'lime'\r\n  ];\r\n  presetColor: string | null = null;\r\n  count: number;\r\n  @ViewChild('contentElement') contentElement: ElementRef;\r\n  @Input() @InputBoolean() nzShowZero = false;\r\n  @Input() @InputBoolean() nzShowDot = true;\r\n  @Input() @InputBoolean() nzDot = false;\r\n  @Input() nzOverflowCount = 99;\r\n  @Input() nzText: string;\r\n  @Input() nzColor: string;\r\n  @Input() nzStyle: { [key: string]: string };\r\n  @Input() nzStatus: NzBadgeStatusType;\r\n  @Input() nzCount: number | TemplateRef<void>;\r\n\r\n  checkContent(): void {\r\n    if (isEmpty(this.contentElement.nativeElement)) {\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-not-a-wrapper');\r\n    } else {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-not-a-wrapper');\r\n    }\r\n  }\r\n\r\n  get showSup(): boolean {\r\n    return (this.nzShowDot && this.nzDot) || this.count > 0 || (this.count === 0 && this.nzShowZero);\r\n  }\r\n\r\n  generateMaxNumberArray(): void {\r\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {\r\n    renderer.addClass(elementRef.nativeElement, 'ant-badge');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateMaxNumberArray();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.checkContent();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzOverflowCount, nzCount, nzColor } = changes;\r\n    if (nzCount && !(nzCount.currentValue instanceof TemplateRef)) {\r\n      this.count = Math.max(0, nzCount.currentValue);\r\n      this.countArray = this.count\r\n        .toString()\r\n        .split('')\r\n        .map(item => +item);\r\n    }\r\n    if (nzOverflowCount) {\r\n      this.generateMaxNumberArray();\r\n    }\r\n    if (nzColor) {\r\n      this.presetColor = this.colorArray.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\r\n\r\nimport { NzBadgeComponent } from './nz-badge.component';\r\n\r\n@NgModule({\r\n  declarations: [NzBadgeComponent],\r\n  exports: [NzBadgeComponent],\r\n  imports: [CommonModule, ObserversModule, NzAddOnModule]\r\n})\r\nexport class NzBadgeModule {}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
