{"version":3,"file":"ng-zorro-antd-icon.js.map","sources":["ng://ng-zorro-antd/icon/nz-icon.service.ts","ng://ng-zorro-antd/icon/nz-icon.directive.ts","ng://ng-zorro-antd/icon/nz-icon.module.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { HttpBackend } from '@angular/common/http';\r\nimport { Inject, Injectable, InjectionToken, Optional, RendererFactory2 } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\r\nimport {\r\n  BarsOutline,\r\n  CalendarOutline,\r\n  CaretDownFill,\r\n  CaretDownOutline,\r\n  CaretUpFill,\r\n  CaretUpOutline,\r\n  CheckCircleFill,\r\n  CheckCircleOutline,\r\n  CheckOutline,\r\n  ClockCircleOutline,\r\n  CloseCircleFill,\r\n  CloseCircleOutline,\r\n  CloseOutline,\r\n  DoubleLeftOutline,\r\n  DoubleRightOutline,\r\n  DownOutline,\r\n  EllipsisOutline,\r\n  ExclamationCircleFill,\r\n  ExclamationCircleOutline,\r\n  EyeOutline,\r\n  FileFill,\r\n  FileOutline,\r\n  FilterFill,\r\n  InfoCircleFill,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  LoadingOutline,\r\n  PaperClipOutline,\r\n  QuestionCircleOutline,\r\n  RightOutline,\r\n  SearchOutline,\r\n  StarFill,\r\n  UploadOutline,\r\n  UpOutline\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nexport interface NzIconfontOption {\r\n  scriptUrl: string;\r\n}\r\n\r\nexport const NZ_ICONS = new InjectionToken('nz_icons');\r\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\r\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\r\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\r\n  BarsOutline,\r\n  CalendarOutline,\r\n  CaretUpFill,\r\n  CaretUpOutline,\r\n  CaretDownFill,\r\n  CaretDownOutline,\r\n  CheckCircleFill,\r\n  CheckCircleOutline,\r\n  CheckOutline,\r\n  ClockCircleOutline,\r\n  CloseCircleOutline,\r\n  CloseCircleFill,\r\n  CloseOutline,\r\n  DoubleLeftOutline,\r\n  DoubleRightOutline,\r\n  DownOutline,\r\n  EllipsisOutline,\r\n  ExclamationCircleFill,\r\n  ExclamationCircleOutline,\r\n  EyeOutline,\r\n  FileFill,\r\n  FileOutline,\r\n  FilterFill,\r\n  InfoCircleFill,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  LoadingOutline,\r\n  PaperClipOutline,\r\n  QuestionCircleOutline,\r\n  RightOutline,\r\n  StarFill,\r\n  SearchOutline,\r\n  StarFill,\r\n  UploadOutline,\r\n  UpOutline\r\n];\r\n\r\n/**\r\n * It should be a global singleton, otherwise registered icons could not be found.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NzIconService extends IconService {\r\n  private iconfontCache = new Set<string>();\r\n  private warnedAboutAPI = false;\r\n  private warnedAboutCross = false;\r\n  private warnedAboutVertical = false;\r\n\r\n  warnAPI(type: 'old' | 'cross' | 'vertical'): void {\r\n    if (type === 'old' && !this.warnedAboutAPI) {\r\n      console.warn(`<i class=\"anticon\"></i> would be deprecated soon. Please use <i nz-icon type=\"\"></i> API.`);\r\n      this.warnedAboutAPI = true;\r\n    }\r\n    if (type === 'cross' && !this.warnedAboutCross) {\r\n      console.warn(`'cross' icon is replaced by 'close' icon.`);\r\n      this.warnedAboutCross = true;\r\n    }\r\n    if (type === 'vertical' && !this.warnedAboutVertical) {\r\n      console.warn(`'verticle' is misspelled, would be corrected in the next major version.`);\r\n      this.warnedAboutVertical = true;\r\n    }\r\n  }\r\n\r\n  normalizeSvgElement(svg: SVGElement): void {\r\n    if (!svg.getAttribute('viewBox')) {\r\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\r\n    }\r\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\r\n      this._renderer.setAttribute(svg, 'width', '1em');\r\n      this._renderer.setAttribute(svg, 'height', '1em');\r\n    }\r\n    if (!svg.getAttribute('fill')) {\r\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\r\n    }\r\n  }\r\n\r\n  fetchFromIconfont(opt: NzIconfontOption): void {\r\n    const { scriptUrl } = opt;\r\n    if (this.document && !this.iconfontCache.has(scriptUrl)) {\r\n      const script = this._renderer.createElement('script');\r\n      this._renderer.setAttribute(script, 'src', scriptUrl);\r\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\r\n      this._renderer.appendChild(this.document.body, script);\r\n      this.iconfontCache.add(scriptUrl);\r\n    }\r\n  }\r\n\r\n  createIconfontIcon(type: string): SVGElement {\r\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\r\n  }\r\n\r\n  constructor(\r\n    protected rendererFactory: RendererFactory2,\r\n    protected sanitizer: DomSanitizer,\r\n    @Optional() protected handler: HttpBackend,\r\n    // tslint:disable-next-line:no-any\r\n    @Optional() @Inject(DOCUMENT) protected document: any,\r\n    @Optional() @Inject(NZ_ICONS) private icons: IconDefinition[],\r\n    @Optional() @Inject(NZ_ICON_DEFAULT_TWOTONE_COLOR) private defaultColor: string\r\n  ) {\r\n    super(rendererFactory, handler, document, sanitizer);\r\n\r\n    this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(this.icons || []));\r\n\r\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\r\n    if (this.defaultColor) {\r\n      if (this.defaultColor.startsWith('#')) {\r\n        primaryColor = this.defaultColor;\r\n      } else {\r\n        console.warn('[NG-ZORRO]: twotone color must be a hex color!');\r\n      }\r\n    }\r\n    this.twoToneColor = { primaryColor };\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentChecked,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\r\nimport { InputBoolean } from 'ng-zorro-antd/core';\r\nimport { NzIconService } from './nz-icon.service';\r\n\r\nconst iconTypeRE = /^anticon\\-\\w/;\r\n\r\nconst getIconTypeClass = (className: string): { name: string; index: number } | undefined => {\r\n  if (!className) {\r\n    return undefined;\r\n  } else {\r\n    const classArr = className.split(/\\s/);\r\n    const index = classArr.findIndex(cls => cls !== 'anticon' && cls !== 'anticon-spin' && !!cls.match(iconTypeRE));\r\n    return index === -1 ? undefined : { name: classArr[index], index };\r\n  }\r\n};\r\n\r\nconst normalizeType = (rawType: string): { type: string; crossError: boolean; verticalError: boolean } => {\r\n  const ret = { type: rawType, crossError: false, verticalError: false };\r\n  ret.type = rawType ? rawType.replace('anticon-', '') : '';\r\n  if (ret.type.includes('verticle')) {\r\n    ret.type = 'up';\r\n    ret.verticalError = true;\r\n  }\r\n  if (ret.type.startsWith('cross')) {\r\n    ret.type = 'close';\r\n    ret.crossError = true;\r\n  }\r\n  return ret;\r\n};\r\n\r\n/**\r\n * This directive extends IconDirective to provide:\r\n *\r\n * - IconFont support\r\n * - spinning\r\n * - old API compatibility\r\n *\r\n * @break-changes\r\n *\r\n * - old API compatibility, icon class names would not be supported.\r\n * - properties that not started with `nz`.\r\n */\r\n@Directive({\r\n  selector: 'i.anticon, [nz-icon]',\r\n  exportAs: 'nzIcon'\r\n})\r\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, OnDestroy, AfterContentChecked {\r\n  /** Properties with `nz` prefix. */\r\n  @Input() @InputBoolean() set nzSpin(value: boolean) {\r\n    this.spin = value;\r\n  }\r\n  @Input() nzRotate: number = 0;\r\n  @Input() set nzType(value: string) {\r\n    this.type = value;\r\n  }\r\n  @Input() set nzTheme(value: ThemeType) {\r\n    this.theme = value;\r\n  }\r\n  @Input() set nzTwotoneColor(value: string) {\r\n    this.twoToneColor = value;\r\n  }\r\n  @Input() set nzIconfont(value: string) {\r\n    this.iconfont = value;\r\n  }\r\n\r\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\r\n  @Input() spin = false;\r\n\r\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\r\n  @Input() iconfont: string;\r\n\r\n  @Input()\r\n  set type(value: string) {\r\n    if (value && value.startsWith('anticon')) {\r\n      const rawClass = getIconTypeClass(value);\r\n      const type = rawClass ? normalizeType(rawClass.name).type : '';\r\n      if (type && this.type !== type) {\r\n        this._type = type;\r\n      }\r\n    } else {\r\n      this._type = value;\r\n    }\r\n  }\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  private classNameObserver: MutationObserver;\r\n  private el = this.elementRef.nativeElement;\r\n  private _type: string;\r\n\r\n  /**\r\n   * Replacement of `changeIcon` for more modifications.\r\n   * @param oldAPI\r\n   */\r\n  private changeIcon2(oldAPI: boolean = false): void {\r\n    if (!oldAPI) {\r\n      this.setClassName();\r\n    }\r\n    this._changeIcon().then(svg => {\r\n      this.setSVGData(svg);\r\n      if (!oldAPI && svg) {\r\n        this.handleSpin(svg);\r\n        this.handleRotate(svg);\r\n      }\r\n    });\r\n  }\r\n\r\n  private classChangeHandler(className: string): void {\r\n    const ret = getIconTypeClass(className);\r\n    if (ret) {\r\n      const { type, crossError, verticalError } = normalizeType(ret.name);\r\n      if (crossError) {\r\n        this.iconService.warnAPI('cross');\r\n      }\r\n      if (verticalError) {\r\n        this.iconService.warnAPI('vertical');\r\n      }\r\n      if (this.type !== type) {\r\n        this._type = type;\r\n        this.changeIcon2(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleSpin(svg: SVGElement): void {\r\n    if ((this.spin || this.type === 'loading') && !this.elementRef.nativeElement.classList.contains('anticon-spin')) {\r\n      this.renderer.addClass(svg, 'anticon-spin');\r\n    } else {\r\n      this.renderer.removeClass(svg, 'anticon-spin');\r\n    }\r\n  }\r\n\r\n  private handleRotate(svg: SVGElement): void {\r\n    if (this.nzRotate) {\r\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\r\n    } else {\r\n      this.renderer.removeAttribute(svg, 'style');\r\n    }\r\n  }\r\n\r\n  private setClassName(): void {\r\n    if (typeof this.type === 'string') {\r\n      const iconClassNameArr = this.el.className.split(/\\s/);\r\n      const ret = getIconTypeClass(this.el.className);\r\n      if (ret) {\r\n        iconClassNameArr.splice(ret.index, 1, `anticon-${this.type}`);\r\n        this.renderer.setAttribute(this.el, 'class', iconClassNameArr.join(' '));\r\n      } else {\r\n        this.renderer.addClass(this.el, `anticon-${this.type}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setSVGData(svg: SVGElement | null): void {\r\n    if (typeof this.type === 'string' && svg) {\r\n      this.renderer.setAttribute(svg, 'data-icon', this.type);\r\n      this.renderer.setAttribute(svg, 'aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public iconService: NzIconService,\r\n    public elementRef: ElementRef,\r\n    public renderer: Renderer2,\r\n    private platform: Platform\r\n  ) {\r\n    super(iconService, elementRef, renderer);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { type, nzType, nzTwotoneColor, twoToneColor, spin, nzSpin, theme, nzTheme, nzRotate } = changes;\r\n\r\n    if (type || nzType || nzTwotoneColor || twoToneColor || spin || nzSpin || theme || nzTheme) {\r\n      this.changeIcon2();\r\n    } else if (nzRotate) {\r\n      this.handleRotate(this.el.firstChild);\r\n    } else {\r\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // If `this.type` is not specified and `classList` contains `anticon`, it should be an icon using old API.\r\n    if (!this.type && this.el.classList.contains('anticon')) {\r\n      this.iconService.warnAPI('old');\r\n      // Get `type` from `className`. If not, initial rendering would be missed.\r\n      this.classChangeHandler(this.el.className);\r\n      if (this.platform.isBrowser) {\r\n        // Add `class` mutation observer.\r\n        this.classNameObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n          mutations\r\n            .filter((mutation: MutationRecord) => mutation.attributeName === 'class')\r\n            .forEach((mutation: MutationRecord) => this.classChangeHandler((mutation.target as HTMLElement).className));\r\n        });\r\n        this.classNameObserver.observe(this.el, { attributes: true });\r\n      }\r\n    }\r\n    // If `classList` does not contain `anticon`, add it before other class names.\r\n    if (!this.el.classList.contains('anticon')) {\r\n      this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.classNameObserver) {\r\n      this.classNameObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If custom content is provided, try to normalize SVG elements.\r\n   */\r\n  ngAfterContentChecked(): void {\r\n    const children = this.el.children;\r\n    let length = children.length;\r\n    if (!this.type && children.length) {\r\n      while (length--) {\r\n        const child = children[length];\r\n        if (child.tagName.toLowerCase() === 'svg') {\r\n          this.iconService.normalizeSvgElement(child as SVGElement);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { NzIconDirective } from './nz-icon.directive';\r\n\r\n@NgModule({\r\n  exports: [NzIconDirective],\r\n  declarations: [NzIconDirective]\r\n})\r\nexport class NzIconModule {}\r\n"],"names":["tslib_1.__extends","tslib_1.__decorate"],"mappings":"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"}
